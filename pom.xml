<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>wise-crowd-data-generator</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <kotlin.version>2.1.0</kotlin.version>
        <!-- Java 21 is the latest LTS version. Supported until 2031 -->
        <java.version>21</java.version>
        <jar.name>myJar</jar.name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <repositories>
        <repository>
            <id>io.schinzel.release</id>
            <url>https://s3-eu-west-1.amazonaws.com/maven-repo.schinzel.io/release</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <!-- Web server -->
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>6.6.0</version>
        </dependency>
        <dependency>
            <!-- Basic utilities. Most commonly less verbose versions of
            common code snippets -->
            <groupId>io.schinzel</groupId>
            <artifactId>basic-utils</artifactId>
            <version>1.6.4</version>
        </dependency>
        <dependency>
            <!-- Basic utilities. Most commonly less verbose versions of
            common code snippets -->
            <groupId>io.schinzel</groupId>
            <artifactId>basic-utils-kotlin</artifactId>
            <version>0.9.5</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <!-- Logging -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.16</version>
        </dependency>

        <!-- TEST -->
        <dependency>
            <!-- Fluent assertions for more readable tests
            http://joel-costigliola.github.io/assertj/-->
            <artifactId>assertj-core</artifactId>
            <groupId>org.assertj</groupId>
            <version>3.26.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Unit tests-->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.11.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <resources>
            <resource>
                <directory>src/main/kotlin</directory>
                <includes>
                    <!-- Include html and js files in the jar -->
                    <include>**/*.html</include>
                    <include>**/*.js</include>
                </includes>
            </resource>
            <!-- Keep the default resources directory -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <!-- Build kotlin -->
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>src/test/kotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                </configuration>
            </plugin>

            <plugin>
                <!-- The shade plugin creates an uber/fat jar containing all dependencies.
                This means the jar can run standalone without external dependencies.
                It also:
                - Handles file merging (like service files)
                - Relocates classes if needed
                - Creates a proper manifest
                - Excludes unnecessary files -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- Prevent generation of dependency-reduced-pom.xml to keep project clean -->
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <!-- To remove a series of warnings -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>META-INF/MANIFEST.MF</exclude>
                                        <exclude>META-INF/LICENSE*</exclude>
                                        <exclude>META-INF/NOTICE*</exclude>
                                        <exclude>META-INF/*.txt</exclude>
                                        <exclude>META-INF/versions/*/module-info.class</exclude>
                                        <exclude>module-info.class</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <!-- To remove a warning about jetty -->
                                    <artifact>org.eclipse.jetty:jetty-webapp</artifact>
                                    <excludes>
                                        <exclude>META-INF/services/org.eclipse.jetty.webapp.Configuration</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <!-- Merges service files -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- Produces a manifest file -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>io.schinzel.page_elements.samples.component.MainKt</mainClass>
                                </transformer>
                            </transformers>
                            <!-- Set the name of jar file -->
                            <finalName>../${jar.name}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- The purpose of this plugin is simply to print start and end message -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- Print start message -->
                    <execution>
                        <id>start-message</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>echo</executable>
                            <arguments>
                                <argument>ðŸš€ Starting build process...</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Print end message -->
                    <execution>
                        <id>end-message</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>echo</executable>
                            <arguments>
                                <argument>âœ¨ Build completed! Jar created: ${jar.name}.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Only needed for IntelliJ IDE compatibility with generated bytecode.
                Can be removed if you only build via command line. If not present
                caller::class.java.packageName generates an error. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <excludes>
                        <exclude>**/*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <!-- Enforces minimum Maven version to prevent build issues and ensure
                team consistency. Fails early with clear error message if Maven is too old
                instead of cryptic build failures later. Protects against version-specific
                bugs and ensures plugin compatibility. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.8.0,)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Kotlin code style and formatting -->
                <groupId>com.github.gantsign.maven</groupId>
                <artifactId>ktlint-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
